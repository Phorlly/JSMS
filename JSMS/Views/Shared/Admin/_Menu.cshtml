
@using Microsoft.AspNet.Identity
@using JSMS.Models.Admin
@{
    //Declare variable for object
    var moduleMainMenuItems = new List<MainMenuItem>();

    //Add module here
    moduleMainMenuItems.Add(new MainMenuItem
    {
        Name = JSMS.Resources.Language.HR,
        Icon = "fas fa-user",
        Role = new List<string> { "Admin", "HR" },
        SubMenuItems = new List<SubMenuItem> {
            new SubMenuItem { Name = JSMS.Resources.Language.User, Controller = "UserRole",Icon = "fas fa-user-friends",Action = "Index",
                              Role = new List<string> { "Admin"}},
            new SubMenuItem { Name = JSMS.Resources.Language.JobApplicant, Controller = "JobApplicant",Icon = "fas fa-user-friends",Action = "Index",
                              Role = new List<string> { "Admin", "HR" }},
            //new SubMenuItem { Name = JSMS.Resources.Language.Applicant, Controller = "Applicant",Icon = "fas fa-user-friends",Action = "Index",
            //                  Role = new List<string> { "Admin", "HR" }},
            //new SubMenuItem { Name = JSMS.Resources.Language.Recruitment,Controller = "Recruitment",Icon = "fas fa-user-edit",Action = "Index",
            //                  Role = new List<string> { "Admin", "HR" }},
            new SubMenuItem { Name = JSMS.Resources.Language.ShortList,Controller = "ShortList",Icon = "fas fa-user-check",Action = "Index",
                              Role = new List<string> { "Admin", "HR" }},
            new SubMenuItem { Name = JSMS.Resources.Language.Client,Controller = "Client",Icon = "fas fa-user-friends",Action = "Index",
                              Role = new List<string> { "Admin", "HR" }},
            new SubMenuItem { Name = JSMS.Resources.Language.Staff,Controller = "Staff",Icon = "fas fa-users",Action = "Index",
                              Role = new List<string> { "Admin", "HR" }},
            new SubMenuItem { Name = JSMS.Resources.Language.Attendance,Controller = "Attendance",Icon = "fas fa-calendar-alt",Action = "Index",
                              Role = new List<string> { "Admin", "HR" }},
        }
    });
    moduleMainMenuItems.Add(new MainMenuItem
    {
        Name = JSMS.Resources.Language.Accounting,
        Icon = "fas fa-donate",
        Role = new List<string> { "Admin", "Accounting" },
        SubMenuItems = new List<SubMenuItem> {
            new SubMenuItem { Name = JSMS.Resources.Language.Accounting, Controller = "Accounting",Icon = "fas fa-donate",Action = "Index",
                              Role = new List<string> { "Admin", "Accounting" }},
            new SubMenuItem { Name = JSMS.Resources.Language.GeneralLedger,Controller = "GeneralLedger",Icon = "fas fa-file-signature",Action = "Index",
                              Role = new List<string> { "Admin", "Accounting" }},
            new SubMenuItem { Name = JSMS.Resources.Language.Invoice,Controller = "Invoice",Icon = "fas fa-donate",Action = "Index",
                  Role = new List<string> { "Admin", "Accounting" }},
            //new SubMenuItem { Name = JSMS.Resources.Language.Transaction,Controller = "Transaction",Icon = "fas fa-id-card",Action = "Index",
            //                  Role = new List<string> { "Admin", "HR" }},
        }
    });
    moduleMainMenuItems.Add(new MainMenuItem
    {
        Name = JSMS.Resources.Language.Report,
        Icon = "fas fa-chart-line",
        Role = new List<string> { "Admin", "HR" },
        SubMenuItems = new List<SubMenuItem> {

            new SubMenuItem { Name = JSMS.Resources.Language.Report+" "+JSMS.Resources.Language.Attendance,Controller = "Attendance",Icon = "fas fa-calculator",Action = "Report",
                              Role = new List<string> { "Admin", "HR" }},
            new SubMenuItem { Name = JSMS.Resources.Language.Report+" "+JSMS.Resources.Language.RemainStock,Controller = "Stock",Icon = "fas fa-layer-group",Action = "Report",
                              Role = new List<string> { "Admin", "HR" }},
        }
    });
    moduleMainMenuItems.Add(new MainMenuItem
    {
        Name = JSMS.Resources.Language.StockManagement,
        Icon = "fas fa-sun",
        Role = new List<string> { "Admin", "HR" },
        SubMenuItems = new List<SubMenuItem> {
            //new SubMenuItem { Name = JSMS.Resources.Language.RegisterOnline,Controller = "RequestOnline",Icon = "fas fa-users",Action = "Index",
            //                  Role = new List<string> { "Admin", "HR" }},
            new SubMenuItem { Name = JSMS.Resources.Language.Products,Controller = "Stock",Icon = "fas fa-shekel-sign",Action = "Product",
                              Role = new List<string> { "Admin", "HR" }},
            new SubMenuItem { Name = JSMS.Resources.Language.Stock, Controller = "Stock",Icon = "fas fa-chart-line",Action = "Index",
                              Role = new List<string> { "Admin", "HR" }},
        }
    });
}


@if (Request.IsAuthenticated)
{


    <ul class="nav nav-pills nav-sidebar flex-column" data-widget="treeview" role="menu" data-accordion="false">
        @if (User.IsInRole("Admin"))
        {
            <li class="nav-item mx-2">
                <a href="@Url.Action("Index", "Home")" class="nav-link @Url.IsLinkActive("Index", "Home")">
                    <i class="fas fa-tachometer-alt"></i>
                    <p class="text-bold text-white mx-1">@JSMS.Resources.Language.Dashboard</p>
                </a>
            </li>
        }
        else
        {
            <li class="nav-item mx-2">
                <a href="@Url.Action("Index", "Home")" class="nav-link @Url.IsLinkActive("Index", "Home")">
                    <i class="fas fa-home"></i>
                    <p class="text-bold text-white mx-1">@JSMS.Resources.Language.Home</p>
                </a>
            </li>
        }


        @*All menu item*@
        @foreach (var mainMenuItem in moduleMainMenuItems)
        {
            if (mainMenuItem.Role.Any(role => User.IsInRole(role)))
            {
                <li class="nav-item has-treeview" id="mainMenu_@(mainMenuItem.Name)">
                    <a href="#" class="nav-link" id="mainMenuLink_@(mainMenuItem.Name)">
                        <i class="@mainMenuItem.Icon nav-icon"></i>
                        <p class="text-bold text-white">
                            @mainMenuItem.Name
                            <i class="right fas fa-angle-left"></i>
                        </p>
                    </a>

                    <ul class="nav nav-treeview">
                        @foreach (var subMenuItem in mainMenuItem.SubMenuItems)
                        {
                            if (subMenuItem.Role.Any(role => User.IsInRole(role)))
                            {
                                <li class="nav-item" id="subMenu_@(subMenuItem.Name)">
                                    <a href="@Url.Action(subMenuItem.Action, subMenuItem.Controller)" class="nav-link" id="subMenuLink_@(subMenuItem.Name)">
                                        <i class="@subMenuItem.Icon px-2"></i>
                                        <p class="text-bold"> @subMenuItem.Name </p>
                                    </a>
                                </li>
                            }
                        }
                    </ul>
                </li>
            }
        }

        @*Logout*@
        <li class="nav-item mt-3">
            <form action="@Url.Action("LogOff", "Account")" id="logoutForm" method="post">
                @Html.AntiForgeryToken()
                <a href="javascript:document.getElementById('logoutForm').submit()" class="nav-link">
                    <i class="fas fa-sign-out-alt nav-icon"></i>
                    <p class="text-bold text-white">@JSMS.Resources.Language.Logout</p>
                </a>
            </form>
        </li>
    </ul>

}

<script>
    // JavaScript to handle dynamic active states based on current URL
    document.addEventListener('DOMContentLoaded',  () => {
        var currentUrl = window.location.href;

        @foreach (var mainMenuItem in moduleMainMenuItems)
        {
            if (mainMenuItem.Role.Any(role => User.IsInRole(role)))
            {
                <text>
                    var mainMenu = document.getElementById('mainMenu_@(mainMenuItem.Name)');
                    var mainMenuLink = document.getElementById('mainMenuLink_@(mainMenuItem.Name)');
                    var mainMenuIsActive = false;

                    @foreach (var subMenuItem in mainMenuItem.SubMenuItems)
                    {
                        if (subMenuItem.Role.Any(role => User.IsInRole(role)))
                        {
                            <text>
                                var subMenuLink = document.getElementById('subMenuLink_@(subMenuItem.Name)');

                                if (currentUrl.includes("@Url.Action(subMenuItem.Action, subMenuItem.Controller)")) {
                                    mainMenuIsActive = true;
                                    mainMenu.classList.add('menu-open');
                                    subMenuLink.classList.add('active');
                                }
                            </text>
                        }
                    }

                    if (mainMenuIsActive) {
                        mainMenuLink.classList.add('active');
                    }
                </text>
            }
        }
    });
</script>
